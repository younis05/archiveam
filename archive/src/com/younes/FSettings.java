/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.younes;

import com.younes.connection.JavaConnected;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.BorderFactory;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.plaf.basic.BasicInternalFrameUI;

/**
 *
 * @author BOUKHTACHE
 */
public class FSettings extends javax.swing.JInternalFrame {

    /**
     * Creates new form FHome
     */
     private Calendar timer=Calendar.getInstance();
     private  ResultSet rst=null;private PreparedStatement pst=null;
     private Statement st=null;
     private Connection conn=null;
     private SimpleDateFormat formcsv = new SimpleDateFormat("dd_MM_yyyy_HH_mm_ss");
     private String filepath;
     private String filename=null;
     private String directory=System.getProperty("user.home"); 
    
    public FSettings() {
        initComponents();
        conn=JavaConnected.getConnectionDB();
        this.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bi=(BasicInternalFrameUI)this.getUI();
        bi.setNorthPane(null);
        SwingUtilities.invokeLater(new Runnable(){
            @Override
            public void run() {
             //  jtxtsearch.requestFocus();
            } 
        });
    }
    public void sqlToCSV(){
      Date date=new Date();timer.setTime(date);
      String dtm=formcsv.format(timer.getTime());
      BufferedWriter  pw=null;
      StringBuilder sb=null;
     try{
           if(conn!=null){
        String sql = "SELECT * FROM `archives`";
	 pst = (PreparedStatement) conn.prepareStatement(sql);
         rst = pst.executeQuery();
         pw=new BufferedWriter(new FileWriter(directory+
 "\\Archives\\FilesCSV\\backup_"+dtm+".csv"));   
  sb=new StringBuilder();
        while(rst.next()){
sb.append(rst.getString("id")); 
sb.append(",");
sb.append(rst.getString("title")); 
sb.append(",");
sb.append(rst.getString("number_archive")); 
sb.append(",");
sb.append(rst.getString("date_time")); 
sb.append(",");
sb.append(rst.getString("image")); 
sb.append(",");
sb.append(rst.getString("cat_id")); 
sb.append("\r\n");  
           }
 pw.write(sb.toString());
           }
     }catch (Exception e) {e.printStackTrace();}finally{
         try{
             if(pw!=null||pst!=null||rst!=null){
             pw.close(); pst.close();rst.close();
         }
         }catch (Exception e) {e.printStackTrace();}
     }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        choosefile = new javax.swing.JButton();
        jpath = new javax.swing.JLabel();
        restore = new javax.swing.JButton();
        backup = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(750, 600));
        setPreferredSize(new java.awt.Dimension(750, 600));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(750, 600));
        jPanel1.setPreferredSize(new java.awt.Dimension(750, 600));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("Delete All Data");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 290, -1, -1));

        choosefile.setText("Choose file");
        choosefile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        choosefile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choosefileActionPerformed(evt);
            }
        });
        jPanel1.add(choosefile, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 290, 100, -1));

        jpath.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jpath.setForeground(new java.awt.Color(51, 51, 51));
        jPanel1.add(jpath, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 150, 260, 20));

        restore.setText("Restore");
        restore.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        restore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restoreActionPerformed(evt);
            }
        });
        jPanel1.add(restore, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 210, 100, -1));

        backup.setText("Backup");
        backup.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backupActionPerformed(evt);
            }
        });
        jPanel1.add(backup, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 210, 90, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Setting");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 40, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setBounds(0, 0, 750, 600);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int msg=JOptionPane.showConfirmDialog(null, "Are you sure delete!","Delete Data...!",JOptionPane.WARNING_MESSAGE);
        if(msg==0){
            String sql="DROP TABLE `archives`";
            String sql2="CREATE TABLE IF NOT EXISTS `archives` "
          + "(`id` INT(11) NOT NULL AUTO_INCREMENT,`title` VARCHAR(255) NOT NULL,"
          + "`number_archive` VARCHAR(500) NOT NULL,`date_time` DATETIME NOT NULL,"
          + "`image` MEDIUMTEXT NOT NULL,`cat_id` INT(11) NOT NULL,PRIMARY KEY (`id`, `cat_id`),"
          + "CONSTRAINT `fk_archives_table2` "
          + "FOREIGN KEY (`cat_id`) REFERENCES `categories` (`id`) ON DELETE CASCADE "
          + "ON UPDATE CASCADE)";
            try {
                st=conn.createStatement();
                st.executeUpdate(sql);
                st.executeUpdate(sql2);

                JOptionPane.showMessageDialog(null, "Delete  success...!");
            } catch (Exception ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, "Drop table persons failed...!"+ex.getMessage());
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void choosefileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choosefileActionPerformed
        JFileChooser file= new JFileChooser();
        file.setCurrentDirectory(new File(directory+"\\Archives\\FilesCSV"));
        //filter files
        FileNameExtensionFilter filter=new FileNameExtensionFilter("*.CSV","csv");
        file.addChoosableFileFilter(filter);
        int result=file.showSaveDialog(null);
        if(result==JFileChooser.APPROVE_OPTION){
            File selectedFile=file.getSelectedFile();
            filename=selectedFile.getAbsolutePath();
            jpath.setText(filename);
        }else if(result==JFileChooser.CANCEL_OPTION){
            JOptionPane.showMessageDialog(null, "no file choose");
        }
    }//GEN-LAST:event_choosefileActionPerformed

    private void restoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restoreActionPerformed
        if(filename==null){
            JOptionPane.showMessageDialog(null, "Choose File...!");
        }else{
            try{
                BufferedReader br=new BufferedReader(new FileReader(filename));
                String line;
                while((line=br.readLine())!=null){
                    String val=  line.replace("\\", "/");
                        String[] value=val.split(",");

                        String sql="INSERT INTO `archives`(`id`,`title`, `number_archive`,`date_time`,`image`,`cat_id`) VALUES "
                        + "('"+value[0]+"','"+value[1]+"','"+value[2]+"','"+value[3]+"','"+value[4]+"','"+value[5]+"')";
                        pst=conn.prepareStatement(sql);
                        pst.executeUpdate();
                    }
                    br.close();
                    filename=null;
                    jpath.setText("");
                    JOptionPane.showMessageDialog(null, "Restored  success...!");
                } catch (Exception ex) { ex.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Restored failed...!");
                }
            }
    }//GEN-LAST:event_restoreActionPerformed

    private void backupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backupActionPerformed
        sqlToCSV();
        JOptionPane.showMessageDialog(null,"Backup success...!");
    }//GEN-LAST:event_backupActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backup;
    private javax.swing.JButton choosefile;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel jpath;
    private javax.swing.JButton restore;
    // End of variables declaration//GEN-END:variables
}
